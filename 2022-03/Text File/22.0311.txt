Docker란 무엇인가?

.리눅스 컨테이너를 기반으로 하여 특정한 서비스를 패키징하고 배포하는데
유용한 오픈소스 프로그램
즉, 컨테이너로 앱을 배포해주는 오픈소스 프로그램

.Docker컨테이너는 컨테이너를 이미지로 만들어서 용량을 줄인다.

.도커의 장점

1. 애플리케이션의 독립성

2. 배포가 쉬움

3. 마이크로서비스 구조 (세밀하다는 뜻)여서 변화가 쉬움


Dockerfile 이란?

애플리케이션을 동작하는 환경을 구성하기위한 불필요한 공통 과정을 간소화해서

Dockerfile을 만들어서 이안에 컨테이너에 패키지,소스코드 등이 들어가있으며

이를 빌드한다면 관련 이미지가 나온다.

%%클라우드와 가상화 기술 배경%%

. 클라우드 컴퓨팅은 하드웨어와 이들을 연결하는 네트워크로 구성된 환경을 가상화를 통해
통합된 계산, 저장 및 처리가 가능한 환경으로 제공하는것이다.
- 클라우드 컴퓨팅은 가상화 서비스를 제공하는것이다.

. 컴퓨터와 인터넷 등 IT의 발전은 다수의 서버를 보유한 데이터센터의 증가를불러일으키며 
하드웨어의 성능이 증가한것에 비해 서버가 구동하는 애플리케이션의 양이 적어서 
서버의 성능을 잘 활용하지 못하는 상황 발생
- 서버의 애플리케이션 구동능력이 하드웨어 발전속도에 비해 너무 덜떨어짐

%%가상화 기술 개념%%

///
. 가상화는 물리적인 컴포넌트를 논리적인 객체로 추상화 하는 것을 뜻한다. 하나의 장치를
여러 개처럼 동작시키거나 여러개의 장치를 묶어서 하나의 장치인것처럼 사용하는것이다.

. 가상화의 대상이 되는 컴퓨터 리소스는 프로세서, 메모리, 스토리지, 네트워크, 글카 등이있다.

%%가상화 종류%%

. 서버 가상화는 서버의 효율성을 높이기 위해 등장한 기술이다.

. 가상화를 가능하게해주는 하이퍼바이저에 의해 제어되며 각종 애플리케이션을 실행하기위한
컴퓨팅 환경인 가상머신으로 구성되있다.

. 하드웨어를 가상화하기 위해서는 하드웨어뿐만 아니라 각각의 가상머신들을 관리할 
가상머신모니터와 같은 중간관리자가 필요한데, 이가 곧 하이퍼바이저라고하며 
VM이 동작할 수 있는 환경을 제공한다.

. 하이퍼바이저는 하드웨어의 물리적인 리소스를 VM들에게 제공하고, VM과 
하드웨어간의 I/O(Input / Output) 명령을 처리하며 가상 레이어에 위치하고 하드웨어와
다수의 VM들 사이의 인터페이스라고 볼수있다.
///

///
. 데스크탑 가상화란 데이터 센터의 서버에서 운영되는 가상의 PC환경을 뜻한다.

. 물리적으로는 존재하지 않는 가상의 개별 컴퓨터로 사용자는 모니터, 키보드, 마우스 등
필수적인 입출력 장치만을 활용하거나 매우 단순한것만 사용가능했었다.

. 가상의 데스크탑을 마치 로컬 시스템처럼 활용할 수 있었으며, 모든 작업의 프로세싱과
저장은 데이터 센터에 위치한 서버에서 처리됨

. VDI 환경에서 언제 어디서든네트워크만 연결이 된다면 서버에 접속해서 자신만의 PC환경을
구동 시킬수 있다. 사용자는 보통의 PC보다 5~10%수준의 전력 소모만으로 유사한 환경 구축가능

. 또한 데이터가 로컬 장치가 아닌 서버에 위치하기 때문에 복원, 생성 등 작업이 쉽고
보안 측면에서도 데이터 센터급의 서비스를 보장받는다.
///

///
. 애플리케이션 가상화는 해당 응용 프로그램이 실행되는 운영체제로부터
응용소프트웨어를 캡슐화하는 기법이다.

. 캡슐화된 응용프로그램은 실제 설치되지는 않고 마치 설치된것처럼 실행된다.

. 이러한 캡슐화는 한 응용 프로그램이 업데이트되면서 다른 응용프로그램이
동작되지 않는 것을 방지한다. 곧, 가상화된 애플리케이션은 관리자가 배포 및 업데이트를
할때 상대적으로 유용하다.
///

%%하이퍼바이저 유형%%

. 첫번째 방식

. 베어 메탈 기반으로 하드웨어 위에서 바로구동되며, 하이퍼바이저가 다수의 vm들을 관장하는 형태
이다. 하이퍼바이저형으로 불린다.

. 가상머신에 설치된 게스트 운영체제는 하드웨어 위에서 하이퍼바이저 다음으로 바로 구동된다.

. 두번째 방식보단 더 향상된 성능, 더어려운 설치


. 두번째 방식

. 하드웨어 위에 호스트 운영체제가 있고, 그 위엔 하이퍼바이저가 다른 응용 프로그램과
유사한 형태로 동작한다.

. 하이퍼바이저에 의해 관리되는 가상머신의 게스트 OS는 하드웨어 위에서 호스트 OS 
하이퍼바이저 다음인 3번째 수준에서 구동된다.

. 첫번째 방식보단 떨어진 성능, 더 쉬운 설치

%%하드웨어 리소스에 따른 가상화 종류%%

. CPU 가상화
. 각각의 가상머신에 동적인 가상CPU 할당
. 각 가상머신의 가상CPU를 물리코어에 매핑하여 자원을 할당하므로 기본적으로 코어의
수만큼 가상머신 구동이 되지만 가상머신 벤더마다 물리 코어당 지원하는 가상머신의 개수가
다르며 하이퍼 스레딩을 활용할경우 더 많은 가상CPU 할당 가능

. 메모리 가상화
. VM에 메모리 영역을 할당하고 연속된 물리적 메모리가 존재하는 것처럼 인식한다.
. 가상머신에 물리 메모리의 특정 영역을 필요한 용량만큼 할당, 페이징 및 메모리 압축 기법을 활용

. 스토리지 가상화
. 가상머신에 저장소를 할당하여 직접 연결된 디스크처럼 인식한다
. 물리 디스크의 특정 영역을 필요한 용량만큼 할당하고, 해당 영역에 접근 및 읽기, 쓰기 권환 제공

. 네트워크 가상화
. 컴퓨터가 여러 네트워크 인터페이스를 보유한 것처럼 인식
. 가상네트워크는 물리적 네트워크에서 분리된 가상의 네트워크를 제공한다. 특정 서비스를
제공하는 가상 네트워크를 구성하여 사용자, 서비스 목적, 등 체계 별로 독립된 네트워크 제공
. 라우터, 스위치, 터미널, 등의 네트워크 중계 기기 및 단말의 가상화를 통해 가상의
네트워크를 만들고 서로 다른 프로토콜도 공존할 수 있게한다.

. 스토리지 영역 네트워크
. 특정 서버나 저장소에 데이터 저장 요구가 많아지는 경우, 상대적으로 저장 공간이 남아 있는 저장소에
분산 저장한다.
. 물리적 저장 디바이스를 가상화한다.

%%컨테이너 기술 배경%%

.컨테이너는 어떤 소프트웨어가 다른 컴퓨팅 환경으로 이동하더라도 안정적으로 
실행되도록 하기 위해서 나온것이다.
. 클라우드 컴퓨팅에서는 컨테이너기반 가상화가 각광받고있다.

%%컨테이너 개념 및 구조%%

. 컨테이너는 모듈화되고 격리된 컴퓨팅 공간, 컴퓨팅 환경, 즉 어플리케이션을 구동하는
환경을 격리한 공간을 뜻한다.
. 운영 체제의 커널(Kernel)'이 여러 격리된 사용자 공간 인스턴스를 
갖출 수 있도록 하는 가상화 방식이기 때문에 ‘OS 레벨 가상화’라고 불림

​. 커널은 운영 체제의 핵심이 되는 컴퓨터 프로그램. 운영 체제의 다른 
부분 및 응용 프로그램 수행에 필요한 여러 서비스를 제공하는 역할을 하며, 
메모리나 저장장치 내에서 운영 체제의 주소 공간을 관리

%%컨테이너 기술 특성%%

. 경량화(컨테이너가 서버 가상화 기술을 대체할수 있는 이유는 가벼워서)
. 컨테이너에는 OS가 포함되지 않기에 용량이 수십MB밖에 안되고 운영체제 부팅이
필요하지 않아서 서비스 시작 기간도 엄청 빠르다.
. 따라서 컨테이너는 더 많은 응용프로그램을 더 쉽게 하나의 물리적 서버에서 구동시키는것이
가능하므로 마이크로 서비스 구축에 최적이다.

. 컴퓨팅자원 
. 컨테이너는 생성 및 실행되면 마치 운영 체제 위에서 하나의 어플리케이션이 동작
하는 것과 동일한 수준의 컴퓨팅 자원만을 필요로 한다. 따라서 기존 가상머신 방식에비해
성능 부하가 적다.
. 컨테이너에서 실행중인 서비스에 더 많은 가용성이 필요하거나 그 반대일때, CPU 사용량
또는 사용자가 설정한 임계치에 따라서 자동으로 확장 및 축소 가능

. 구동 방식
. 컨테이너는 특정 클라우드 어플리케이션이 실행되기 위한 모든 라이브러리와 바이너리
파일 등이 패키지화되어 있기 때문에 기존의 시스템에서 실행하는 식으로 구동 방식이 간단하다.

. 단, 컨테이너 기술은 호스트 OS 커널을 공유하는 구조라서 한쪽에서 장애가 발생하면
다른 컨테이너또한 영향을 받을수 있다.

%%도커 (DOCKER)%%

. 도커는 오픈소스 기반의 컨테이너 관리 플랫폼이다.

. 또한 도커는 리눅스의 응용프로그램들을 소프트웨어 컨테이너 안에 배치시키는 일을
자동화하는 오픈소스 프로젝트이며 리눅스 컨테이너 기술 기반이다.

. 컨테이너 이미지 생성 기능을 통해서 특정 컨테이너에서 실행될 소프트웨어와 방식에 대해
컨테이너 실행에 필요한 파일, 설정값 등의 구동 사양을 미리 정의 할 수있음

%%도커 이미지%%

. 가장 중요한 것은 컨테이너와 이미지 이다. 여기서 말하는 이미지는 컨테이너 실행에
필요한 파일과 설정값 등을 포함하고 있는 파일을 의미한다.
