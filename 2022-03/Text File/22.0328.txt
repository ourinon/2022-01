C#

generate - 발생시키다, 만들어 내다

above - 위에

discuss - 설명하다, 논의하다, 상의하다

execute - 실행하다

Syntax - 구문

below - 아래 

Switch 에 default 문은 해당되는 case가 없으면 실행되는 것이다.

if문에서 Break와 Continue의 차이는

break - 바로  반복문 탈출

continue - 실행되고있는 반복 탈출 (다음 조건 실행) 

public - 모든 클래스에서 접근 가능

private - 같은 클래스에서만 접근 가능

protected - 같은 클래스나 상속받은 클래스에서만 접근 가능

internal - 같은 어셈블리 내에서만 접근 가능

Interface 와 Abstract Class 차이

Interface 특징

1. 함수에대한 접근 지정자를 가질수없으며 기본적으로 public 이다.

2. 구현이 아닌 서명만 가질 수 있다.

3. 인터페이스가 비교적 추상클래스보단 느리다.

4. 인터페이스는 인스턴스화 할 수 없다.

5. 인터페이스는 필드를 가질 수가 없다.

6. 인터페이스에는 추상 메소드만이 있다.


Abstract Class

1. 함수에 대한 접근 지정자를 가질 수 있다.

2. 구현을 제공할 수 있다.

3. 추상클래스가 비교적 인터페이스보단 빠르다.

4. 추상클래스는 인스턴스화 할 수 없다.

5. 추상클래스는 필드와 상수를 정의 할 수있다.

6. 추상클래스에는 그냥 메소드가 있을 수 있다.

또한 C#에서 클래스는 하나 이상의 인터페이스를 상속받을수 있지만 추상클래스는 하나만 가능하다.

C#에서 인터페이스는 생성자를 선언할 수없지만 추상클래스는 생성자 선언 가능하다.

프로그램의 메모리 4가지 구역

Stack 영역 - 지역변수, 사용자 정의함수

Heap 영역 - 동적할당

Data 영역 - 전역변수, 지역변수, static으로 선언되는 변수, 프로그래밍이 종료되는 순간까지
지워지지 않는 데이터를 저장함

Code 영역 - Text, 코드를 저장할 공간

정적할당 - 메모리의 크기가 하드 코딩되어 있기 때문에 프로그램이 실행되는 순간 이미 
메모리 크기가 결정된것이 특징이다.

동적할당 - 컴퓨터 프로그램에서 실행 시간동안 사용할 메모리 공간 할당받으며, 사용이
끝나면 다시 반납, 그리고 다시 요구가 오면 재 할당 받는다.(유동적이다.)

전역(global)변수와 정적(static) 변수 차이

1. 전역 변수는 다른파일에서도 가져다 쓸수 있지만 정적변수는 해당 파일의 scope안에서만
접근이 가능하다.

2. 초기화 하지 않은 정적 변수는 메모리상에 올라오지도 않는다.

3. 정적 객체의 경우 처음 구문이 수행되는 시점에 처음 생성자를 호출하도록 할 수 있다.


public partial class 에서 partial 이란?

. partial를 사용하여 class를 정의할때 한군데가 아닌, 복수의 장소에서 class를 정의할수 있게 한다.

- 다수의 개발자가 똑같은 class를 사용하여 여러파일에서 개발할때 conflice를 방지한다. 

%% Main 메소드 매개변수의 의미 %%

매개변수는 String[] args 이다. 즉, Main 메소드는 String 배열로 인자를 받고있다.

이는 곧 프로그램을 시작할때 넘겨줄수 있는 매개변수를 의미한다.

