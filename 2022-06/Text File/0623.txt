Axios 사용법

웹 브라우저와 Node.js를 위한 HTTP 비동기 통신 라이브러리이다.

비동기 통신이란 작성된 순서대로 실행되지 않는다는 특징을 가지고있다.

백엔드와 프론트엔드 간 통신을 쉽게 하기 위해 사용되는 것으로 Ajax처럼 사용되는 것이다.

Fetch와 Axios 차이

Fetch와 Axios 둘 다 HTTP 요청을 처리하기 위한 자바스크립트의 라이브러리이다.

Fetch는 자바스크립트에 내장되어 잇기 때문에 별도의 import나 설치가 필요하지 않다.

Axios 는 별도의 CDN 을 명시해줘야한다. (제이쿼리처럼)

Axios 의 POST는 새로운 자원을 생성할 때 사용한다.

예) 
axios.post(url, data 객체)


Axios GET은 자원을 요청할 때 사용한다.

예)
axios.get(url)

Axios의 PUT은 자원을 갱신할 때 사용한다.

예)
axios.put(url, data 객체)

데이터의 전체가 아닌 일부 데이터만 수정하고 싶다면 axios.patch()를 사용 할 수 있다.
PATCH를 사용한다면 넘겨준 데이터만 변경되고 기존 데이터는 유지된다.

Axios DELETE는 자원을 삭제할때 사용한다.

예)
axios.delete(url)

콜백함수란? 

어떠한 문법적 특징을 가지고있는게 아니라, 호출방식에 의한 구분이다.

이름 그대로 나중에 실행되는 함수이다.

특정조건을 갖추었을때 시스템에서 호출하도록 하는 함수이다.

자바스크립트 var, let, const의 차이점

var -> 유연한 변수 선언으로 간단한 테스트에는 유용하나 코드가 길어지고 복잡해진다면 중간에 값이 바뀔 우려가있다.
그래서 나온 let과 const는 변수를 재선언하지 못한다.
(하지만, var로 선언된 변수를 선언문 이전에 참조해도 에러가 발생하지 않는다.)

let -> 하지만 이 변수 선언 방식은 재할당이 가능하다.
(또한, let으로 선언된 변수를 선언문 이전에 참조하면 참조 에러가 발생한다.)

const -> const는 재 선언, 변수 재할당 모두 불가능하다.

자바스크립트의 변수는 선언 단계 -> 초기화 단계 -> 할당 단계 에 걸쳐 생성된다.

var 로 선언된 변수는 선언 단계와 초기화 단게가 동시에 이루어진다.

let으로 선언된 변수는 선언 단계와 초기화 단계가 분리되어 진행된다.

자바스크립트 Scope(스코프)란? 유효범위를 의미한다.

알고리즘이란 어떠한 문제를 해결하는 방법이나 절차를 의미하고, 매커니즘이란 어떠한 사물에 대한 작동 원리나 구조를 의미한다.


자바스크립트 export default 란?
export는 내보내기 기능이고 앞에 default 를 붙이면

 import 함수명 from * 식으로 사용할수 있다.

기존엔 import {함수명} from *


@@DB@@
//////////////////////////////////////
ORM 이란?

Object Relational mapping 의 약자이다.

OOP 와 Relational Database

객체 지향 프로그래밍은 클래스를 이용하고,  관계형 데이터베이스는 테이블을 이용한다. 즉 객체 모델과 관계형 모델간의
불일치가 존재한다. 이때, ORM기법을 사용하여 이 간극을 맞춘다. 
///////////////////////////////////////

스크립트 언어란? 소스 코드를 컴파일 하지 않고도 실행할 수 있는 프로그래밍 언어이다.

예를 들어 C나 비주얼베이직, 자바같은 경우 작성한 소스를 컴파일 하여 기계어코드로 변경해야 실행파일을 얻을수있지만,

스크입트 언어는 별도의 컴파일 없이 내장된 번역기로인해 바로 실행 할 수 있다.

이런 장점이 있지만 번역과정을 거쳐야 하기 때문에 조금 느리다는 단점이 있다.

스크립트 언어는 주로 시스템에 사용한다. 유닉스의 쉘 스크립트, 윈도우의 배치 스크립트 처럼 일괄 처리 작업에 사용한다.

웹 어플리케이션에 사용한다. 일반적으로 스크립트 언어는 빠른 성능이 필요하지 않은 웹 애플리케이션을 만드는 데 이용되어 왔으며,

크게 서버 사이드 스크립트 와 클라이언트 사이드 스크립트로 나눌수 있다.

서버 사이드 스크립트란 해당 소스의 실행 결과를 확인하기 위해 웹서버를 거쳐야 하는 스크립트를 말하며 ASP, PHP, JSP, PYTHON 등이 있다.

클라이언트 사이드 스크립트란 내장된 번역기에 의해 실행되어 JavaScript, VBScript, JScript 등이 있다.

///////////////////////////////////////////////////////////
깃 특정 파일만 clone 하는방법?

1. Sparse Checkout 기능 활성화 -> git config core.sparseCheckout true 

2. git remote 추가 -> git remote add -f origin <remote url>

3. echo <가져올 부분의 폴더 경로> >> .git/info/sparse-checkout

4. git pull origin <메인 branch>
///////////////////////////////////////////////////////////

java spring에서 maven 과 gradle 존재 의의?

- 기본적으로 maven, gradle은 빌드 관리 도구이다.

- 프로젝트에 포함된 각종 라이브러리와 설정파일, 코드들을 JVM이나 WAS 가 인식할 수 있도록 패키징 해주는
빌드 과정을 하기위해서 maven 이나 gradle 처럼 관련 도구들이 필요하다.

즉 픅로젝트 생성, 테스트 빌드, 배포 등의 작업을 위한 전용 프로그램이라고 할 수 있다.

또 한 프로그램을 개발하면서 외부 라이브러리를 필요로 할때, 그 라이브러리들을 일일이 다운받아 관리하는게 아닌,

빌드 도구 설정 파일에서 필요한 라이브러리 종류와 버전들, 종속성 정보를 명시하여 자동으로 관리해준다.

1. 인터페이스 위에 @SuppressWarnings 어노테이션 ? 

- 컴파일시 컴파일 경고를 사용하지 않도록 설정할 수 있다.
all - 모든 경고를 억제한다.
cast - 캐스트 오퍼레이션과 관련된 경고를 억제한다.
finally - 리턴되지 않는 마지막 블록과 관련된 경고를 억제한다.
null - 널 분석과 관련된 경고를 억제한다.
serial - 직렬화 가능 클래스에 대한 누락된 serialVersionUID 필드와 관련된 경고를 억제한다.
unchecked - 미확인 오퍼레이션과 관련된 경고를 억제한다.
unused - 사용하지 않은 코드 및 불필요한 코드와 관련된 경고를 억제한다.

- 변수에 바로 사용은 가능하지만 선언 이후에 중간에 사용은 불가한다.

예) @SuppressWarnings("option")

2. @param 어노테이션?

SQl 문장에 파라미터를 전달할 때 그 변수 앞에 @Param 어노테이션을 붙여준다.

즉 mapper 인터페이스에 전달하고자 하는 변수명 앞에 @Param 어노테이션을 추가해준다.

3. 어노테이션?

- 자바소스 코드에 추가하여 사용할 수 있는 메타데이터의 일종이다. 즉 클래스와 메서드에 추가해서
다양한 기능을 부여하는 역할을 한다. 

