Node.js

- JavaScript 런타임(서버 혹은 실행 환경) 이다. 이 아이는 REPL(Read, Eval, Print, Loop)을 통해서 런타임을 제공한다.
1. Read - 유저의 입력 값을 받아서 메모리에 저장
2. Eval - 입력 값의 평가, 실행
3. Print - Eval로 인해 반환된 값을 출력한다.
4. Loop - 1 ~ 3을 반복

npm 

- Node Package Manager의 약자이며 NodeJS에서 사용할 수 있는 모듈들을
패키지화해서 모아둔 저장소 역할이다. 그리고 설치/관리를 수행하는 CLI 를 제공한다

코드 하나하나 뜯어서 해석해야할듯 db와 연동안되는 원인 파악 힘듦

const

- 변수를 선언할때 사용된다. 해당 예약어로 선언시 상수(선언 후 변하지 않음)로 선언되며
let으로 선언시 변할수 있는값으로 선언된다.

require

- 모듈을 불러올때 사용된다.
- module.export로 내보낸 것을 다른 곳에서 불러와서 쓰게 한다.
- 구조분해 방식으로 작성한 부분은 exports되는 대상이 객체나 배열형태이면 사용 가능하다.

// 비동기 처리를 할 수 있도록 해주는 것들 //

비동기 처리란?

- 작업들이 순차적으로 이루어지지 않는다. 예를들어서 A -> B순서로 작업이 있을경우
A를 실행한 후 종료되기 전에 B를 실행할 수 있다. 
- 다른 작업들을 non-blocking 한다.
- javascript를 사용한 비동기 통신 방식을 Ajax라고 한다.

동기 처리란?

- 작업들이 순차적으로 이루어진다. 
- 다른 작업들을 blocking 한다.

async 와 await

- 코드가 간결해지고, 가독성이 높아진다.
- try / catch로 에러를 핸들링할 수 있다.
- error 확인이 쉽다.


// 비동기 처리를 할 수 있도록 해주는 것들 // 

npm start 와 npm run start 차이

- 직접적으로 start 시키는것과 nodemon 을 통해서 실행시키는 차이가있다.
- scripts 안에 정의한 문자로 프로젝트를 실행 할 수있다. 만약 "start"가 아니고 "dev"로 정의했다면
- npm run dev 로 프로젝트를 실행할 것이다.
