BACKJOON 사용언어 : python


문제 이름 :  달팽이는 올라가고 싶다

문제 번호 : 2869

문제 : 땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

답 -

A, B, V = map(int, input().split())#A B V 주어진다.
# 1일 = A - B
if (V-A) % (A-B) == 0:
    print(((V-A) // (A-B)) + 1)
else:
    print(((V-A) // (A-B)) + 2)

문제 이름 : ACM 호텔

문제 번호 : 10250

문제 : ACM 호텔 매니저 지우는 손님이 도착하는 대로 빈 방을 배정하고 있다. 고객 설문조사에 따르면 손님들은 호텔 정문으로부터 걸어서 가장 짧은 거리에 있는 방을 선호한다고 한다. 여러분은 지우를 도와 줄 프로그램을 작성하고자 한다. 즉 설문조사 결과 대로 호텔 정문으로부터 걷는 거리가 가장 짧도록 방을 배정하는 프로그램을 작성하고자 한다.

문제를 단순화하기 위해서 호텔은 직사각형 모양이라고 가정하자. 각 층에 W 개의 방이 있는 H 층 건물이라고 가정하자 (1 ≤ H, W ≤ 99). 그리고 엘리베이터는 가장 왼쪽에 있다고 가정하자(그림 1 참고). 이런 형태의 호텔을 H × W 형태 호텔이라고 부른다. 호텔 정문은 일층 엘리베이터 바로 앞에 있는데, 정문에서 엘리베이터까지의 거리는 무시한다. 또 모든 인접한 두 방 사이의 거리는 같은 거리(거리 1)라고 가정하고 호텔의 정면 쪽에만 방이 있다고 가정한다.

답 -

num = int(input()) 
for i in range(num): # 6 12 1
    H, W, N = map(int, input().split()) # H = 호텔의 층 N = 몇 번째 손님 W = 각 층의 방 수
    if H >= N:
        Hnum = str(N)
        Wnum = "0"+str(1)
    else:
        if N % H > 0:
            Hnum = str(N % H)
            if N // H + 1 <= 9:
                Wnum = "0"+str(N // H + 1)
            else:
                Wnum = str(N // H + 1)            
        else:
            Hnum = str(H)
            if N // H <= 9:
                Wnum = "0"+str(N // H)
            else:
                Wnum = str(N // H)
    print(Hnum + Wnum)

문제 이름 : 부녀회장이 될테야

문제 번호 : 2775

문제 : 평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.

이 아파트에 거주를 하려면 조건이 있는데, “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.

답 -

num = int(input())
saram = 0
res = 0
for i in range(num):
    k = int(input())
    n = int(input())
    if k == 0:
        print(n)
        break
    List = []
    for j in range(k+1):  
        if j == 0:
            TList = []
            for p in range(1, n+1):
                TList.append(p)
            List.append(TList)
        else:
            TList = []
            for p in range(1, n+1):
                saram += List[j-1][p-1]
                TList.append(saram)
            List.append(TList)
            res = saram
            saram = 0
    print(res)